version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/shopdb
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KEYCLOAK_AUTH_SERVER_URL=http://keycloak:8080
      - SPRINGDOC_SWAGGER_UI_OAUTH2_AUTHORIZATION_URL=http://localhost:8081/realms/ecommerce/protocol/openid-connect/auth
      - SPRINGDOC_SWAGGER_UI_OAUTH2_TOKEN_URL=http://localhost:8081/realms/ecommerce/protocol/openid-connect/token
    depends_on:
      - postgres
      - keycloak
    networks:
      - ecommerce-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=shopdb,keycloakdima
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    command: ["postgres", "-c", "max_connections=1000"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloakdima
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
    ports:
      - "8081:8080"
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./keycloak-init.sh:/opt/keycloak/init.sh
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ecommerce-network

networks:
  ecommerce-network:
    driver: bridge

volumes:
  postgres_data:
  keycloak_data:
